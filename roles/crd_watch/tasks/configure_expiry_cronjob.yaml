- name: fetch list of namespaces
  k8s_info:
    kind: Namespace
  register: projects

- name: fetch list of cleaning jobs
  k8s_info:
    api_version: "batch/v1"
    kind: jobs
    label_selectors:
      - "parent = cleaning-jobs"
  register: jobs

- name: create cleaning configmap
  k8s:
    namespace: "{{ lookup('env','WATCH_NAMESPACE') }}"
    merge_type: merge
    definition: "{{lookup('template', 'cronjob_configmap.yaml')}}"

- name: delete existing jobs
  k8s:
    status: absent
    namespace: "{{ lookup('env','WATCH_NAMESPACE') }}"
    name: "{{ item.metadata.name }}"
  loop: "{{ jobs.resources }}"

- name: deploy cleaning cronjob
  k8s:
    namespace: "{{ lookup('env','WATCH_NAMESPACE') }}"
    merge_type: merge
    definition:
      apiVersion: batch/v1beta1
      kind: CronJob
      metadata:
        name: cleaner
      spec:
        schedule: "*/{{ cleaningconfig.spec.garbageCollectorFrequency | regex_replace('m', '')  }} * * * *"
        concurrencyPolicy: "Replace"
        startingDeadlineSeconds: 200
        suspend: false
        successfulJobsHistoryLimit: 3
        failedJobsHistoryLimit: 1
        jobTemplate:
          spec:
            template:
              metadata:
                labels:
                  parent: "cleaning-jobs"
              spec:
                serviceAccount: cleaning-operator
                serviceAccountName: cleaning-operator
                containers:
                - name: cleaner
                  image: quay.io/operator-framework/ansible-operator:v0.18.0
                  command:
                    - "/usr/local/bin/ansible-playbook"
                  args:
                    - "/srv/mount/playbook.yaml"
                  volumeMounts:
                  - name: cleaner-playbook
                    mountPath: /srv/mount
                restartPolicy: OnFailure
                volumes:
                  - name: cleaner-playbook
                    configMap:
                      name: cleaner-playbook
    state: present
