- name: fetch ephemeral namespaces
  k8s_info:
    api_version: cleaning.ansible-operator.com/v1
    kind: EphemeralNamespace
    namespace: "{{ lookup('env','WATCH_NAMESPACE') }}"
  register: ephemeral_namespaces

- name: fetch ephemeral namespaces
  k8s_info:
    kind: namespace
    namespace: "{{ lookup('env','WATCH_NAMESPACE') }}"
    label_selectors:
      - cleaningOperator_ephemeralnamespace = "true"
  register: namespaces

- name: create namespaces related to ephemeralnamespaces
  k8s:
    state: present
    merge_type: merge
    definition:
      kind: Namespace
      apiVersion: v1
      metadata:
        name: "{{ item.metadata.name }}"
        labels:
          cleaningOperator_protected: "false"
          cleaningOperator_expiry: "{{ item.spec.expiry }}"
          cleaningOperator_ephemeralnamespace: "true"
  loop: "{{ ephemeral_namespaces.resources }}"

- name: create cleaning configmap
  k8s:
    namespace: "{{ lookup('env','WATCH_NAMESPACE') }}"
    merge_type: merge
    definition: "{{lookup('template', 'cronjob_configmap.yaml')}}"

- name: get schedule time
  shell: "/usr/bin/python3.6 /opt/ansible/roles/ephemeral_namespace_watch/files/generate_schedule_param.py {{ item.metadata.creationTimestamp }} {{ cleaningconfig.spec.expiry | regex_replace('d', '')  }}"
  register: schedule_time
  loop: "{{ namespaces.resources }}"

- name: deploy cleaning cronjob
  k8s:
    namespace: "{{ lookup('env','WATCH_NAMESPACE') }}"
    merge_type: merge
    definition:
      apiVersion: batch/v1beta1
      kind: CronJob
      metadata:
        name: "{{ item.item.metadata.name }}-cleaner"
      spec:
        schedule: "{{ item.stdout }}"
        concurrencyPolicy: "Replace"
        startingDeadlineSeconds: 200
        suspend: false
        successfulJobsHistoryLimit: 3
        failedJobsHistoryLimit: 1
        jobTemplate:
          spec:
            template:
              metadata:
                labels:
                  parent: "cleaning-jobs"
              spec:
                serviceAccount: cleaning-operator
                serviceAccountName: cleaning-operator
                containers:
                - name: cleaner
                  image: quay.io/operator-framework/ansible-operator:v0.18.0
                  command:
                    - "/usr/local/bin/ansible-playbook"
                  args:
                    - "/srv/mount/playbook.yaml"
                    - "--extra-vars='eph_namespace={{ item.item.metadata.name }}'"
                  env:
                    - key: WATCH_NAMESPACE
                      value: "{{ lookup('env','WATCH_NAMESPACE') }}"
                  volumeMounts:
                  - name: ephemeralnamespace-cleaner-playbook
                    mountPath: /srv/mount
                restartPolicy: OnFailure
                volumes:
                  - name: ephemeralnamespace-cleaner-playbook
                    configMap:
                      name: ephemeralnamespace-cleaner-playbook
    state: present
    loop: "{{ schedule_time.results }}"
